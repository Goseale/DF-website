@import "_variables";

* {
  font-family: "Roboto", sans-serif;
  word-wrap: break-word;
}

.noSelect {
  user-select: none;
}

.accelerateSpin {
  animation: accelerateSpin 2.5s infinite;
}

.Retired {
  color: $retiredColor;
}

.Emeritus {
  color: $emeritusColor;
}

.JrHelper {
  color: $jrHelperColor;
}

.Helper {
  color: $helperColor;
}

.Expert {
  color: $expertColor;
}

.JrMod {
  color: $jrModColor;
}

.Mod {
  color: $modColor;
}

.Admin {
  color: $adminColor;
}

.Owner {
  color: $ownerColor;
}

.WebDev {
  color: $webDevColor;
}

@keyframes accelerateSpin {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(1800deg);
  }
}

a:not(.noHovLR) {
  position: relative;
  text-decoration: none;

  &::before {
    content: "";
    position: absolute;
    width: 0%;
    height: 2px;
    bottom: 0;
    left: 0;
    border-radius: 5px;
    background-color: $aquaBlue;
    visibility: hidden;
    opacity: 0.5;
    transition: all 0.25s cubic-bezier(1, 0.3, 0.4, 0.75) 0s;
  }

  &:hover::before {
    visibility: visible;
    opacity: 1;
    width: 100%;
  }
}

table {
  border-collapse: collapse;
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  padding: 0;
}

#right {
  float: right;
}

#left {
  float: left;
}

textarea:not(.not),
input[type="text"]:not(.not),
input[type="password"]:not(.not) {
  cursor: text;
}

textarea:not(.not),
input[type="text"]:not(.not),
input[type="password"]:not(.not),
select:not(.not) {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  padding: 3px;
  background-color: white;
  color: black;
  outline: none;
  font-size: 17px;
  font-weight: 500;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  height: 25px;
}

input[type="text"]:not(.not),
select:not(.not) {
  border-bottom: 3px solid $aquaBlue;
}

input[type="password"]:not(.not) {
  border-bottom: 3px solid #f75c5c;
}

textarea:not(.noMargin),
input[type="text"]:not(.noMargin),
input[type="password"]:not(.noMargin),
select:not(.noMargin),
button:not(.not):not(.noMargin),
input[type="submit"]:not(.noMargin),
input[type="button"]:not(.noMargin) {
  transition: 0.1s border ease-out;
  margin: 2px;
}

textarea:not(.not):focus,
input[type="text"]:not(.not):focus,
input[type="password"]:not(.not):focus {
  border-bottom: 3px solid rgb(108, 177, 214);
}

input[type="password"]:focus:not(.not) {
  border-bottom: 3px solid rgb(227, 72, 72);
}

textarea:not(.not)::-webkit-input-placeholder,
input[type="text"]:not(.not)::-webkit-input-placeholder,
input[type="password"]:not(.not)::-webkit-input-placeholder,
select:not(.not)::-webkit-input-placeholder {
  color: rgba(0, 0, 0, 0.5);
}

textarea:not(.not):-ms-input-placeholder,
input[type="text"]:not(.not):-ms-input-placeholder,
input[type="password"]:not(.not):-ms-input-placeholder,
select:not(.not):-ms-input-placeholder {
  color: rgba(0, 0, 0, 0.5);
}

textarea:not(.not)::placeholder,
input[type="text"]:not(.not)::placeholder,
input[type="password"]:not(.not)::placeholder,
select:not(.not)::placeholder {
  color: rgba(0, 0, 0, 0.5);
}

button:not(.not),
input[type="submit"]:not(.not),
input[type="button"]:not(.not) {
  -webkit-transition: 0.1s border ease-out, 0.1s background ease-out;
  -o-transition: 0.1s border ease-out, 0.1s background ease-out;
  transition: 0.1s border ease-out, 0.1s background ease-out;
  -moz-appearance: none;
  appearance: none;
  -webkit-appearance: none;
  border: none;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  padding: 3px;
  background-color: white;
  color: black;
  font-size: 17px;
  font-weight: 400;
  cursor: pointer;
  outline: none;
  box-shadow: 0px 0px 2px 1px rgba(0, 0, 0, 0.5);
  border-bottom: 3px solid #5cf76e;
}

input:not(.not),
select:not(.not) {
  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.5);
}

select:not(.not) {
  height: 30px;
}

button:not(.not):not(.successBtn):disabled,
input[type="submit"]:not(.successBtn):disabled,
input[type="button"]:not(.successBtn):disabled {
  -webkit-transition: 0.1s border ease-out, 0.1s background ease-out;
  -o-transition: 0.1s border ease-out, 0.1s background ease-out;
  transition: 0.1s border ease-out, 0.1s background ease-out;
  color: white;
  cursor: wait;
  -webkit-animation-name: borderBlink;
  animation-name: borderBlink;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}

button.successBtn:not(.not):disabled,
input[type="submit"]:not(.not).successBtn:disabled,
input[type="button"]:not(.not).successBtn:disabled {
  -webkit-transition: 0.1s border ease-out, 0.1s background ease-out;
  -o-transition: 0.1s border ease-out, 0.1s background ease-out;
  transition: 0.1s border ease-out, 0.1s background ease-out;
  color: rgb(9, 255, 0);
  cursor: wait;
  -webkit-animation-name: borderBlinkSuccess;
  animation-name: borderBlinkSuccess;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}

@-webkit-keyframes borderBlink {
  0% {
    border: 2px solid rgb(130, 130, 255);
    color: white;
    background-color: white;
  }
  50% {
    border: 2px solid white;
    color: rgb(130, 130, 255);
    background-color: white;
  }
  100% {
    border: 2px solid rgb(130, 130, 255);
    color: white;
    background-color: white;
  }
}

@keyframes borderBlink {
  0% {
    border: 2px solid rgb(130, 130, 255);
    color: rgb(130, 130, 255);
    background-color: white;
  }
  50% {
    border: 2px solid white;
    color: rgb(130, 130, 255);
    background-color: white;
  }
  100% {
    border: 2px solid rgb(130, 130, 255);
    color: rgb(130, 130, 255);
    background-color: white;
  }
}

@-webkit-keyframes borderBlinkSuccess {
  0% {
    border: 2px solid rgb(85, 204, 38);
    color: rgb(85, 204, 38);
    background-color: white;
  }
  50% {
    border: 2px solid white;
    color: rgb(85, 204, 38);
    background-color: white;
  }
  100% {
    border: 2px solid rgb(85, 204, 38);
    color: rgb(85, 204, 38);
    background-color: white;
  }
}

@keyframes borderBlinkSuccess {
  0% {
    border: 2px solid rgb(85, 204, 38);
    color: rgb(85, 204, 38);
    background-color: white;
  }
  50% {
    border: 2px solid white;
    color: rgb(85, 204, 38);
    background-color: white;
  }
  100% {
    border: 2px solid rgb(85, 204, 38);
    color: rgb(85, 204, 38);
    background-color: white;
  }
}

button:not(.not):hover,
input[type="submit"]:not(.not):hover,
input[type="button"]:not(.not):hover {
  border-bottom: 3px solid rgb(72, 227, 90);
}

button:not(.not):active,
input[type="submit"]:not(.not):active,
input[type="button"]:not(.not):active {
  border-bottom: 3px solid rgb(52, 207, 70);
}

button:not(.not) p {
  display: inline-block;
}

#error-output {
  position: fixed;
  z-index: 100;
  bottom: 0;
  right: 0;
  width: 200px;
}

#error-output .output {
  background-color: white;
  color: black;
  font-size: 17px;
  border-radius: 5px;
  margin: 10px;
  padding-left: 5px;
  padding-right: 5px;
  min-width: 75px;
  max-width: 200px;
  min-height: 0;
  max-height: 0;
  overflow: hidden;
  -webkit-animation-name: popup;
  animation-name: popup;
  -webkit-animation-duration: 5s;
  animation-duration: 5s;
  -webkit-animation-timing-function: ease-out;
  animation-timing-function: ease-out;
}

#error-output p {
  word-break: break-word;
}

#error-output #info {
  color: #5379bf;
}

#error-output #error {
  color: #d33030;
}

#error-output #success {
  color: #94ce4e;
}

#error-output #iconSpace {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  float: left;
  height: 20px;
  width: 25px;
}

#error-output #textSpace {
  float: right;
  width: calc(100% - 25px);
}

#error-output #squeezer {
  width: 100%;
  margin-top: 5px;
  margin-bottom: 5px;
  position: relative;
  display: inline-block;
}

@-webkit-keyframes popup {
  0% {
    min-height: 0;
    max-height: 0;
  }
  30% {
    max-height: 500px;
    min-height: 30px;
  }
  70% {
    max-height: 500px;
    min-height: 30px;
  }
  100% {
    max-height: 0;
    min-height: 0;
  }
}

@keyframes popup {
  0% {
    min-height: 0;
    max-height: 0;
  }
  30% {
    max-height: 500px;
    min-height: 30px;
  }
  70% {
    max-height: 500px;
    min-height: 30px;
  }
  100% {
    max-height: 0;
    min-height: 0;
  }
}

#centerPanelWrapper {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 0 0 5px 5px;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);
}

#fullWidthPanelWrapper {
  position: relative;
  top: 15px;
  left: 15px;
  margin-bottom: 30px;
  width: calc(100% - 30px);
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 0 0 5px 5px;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);
}

#panelWrapper {
  position: relative;
  display: inline-block;
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 0 0 5px 5px;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);
}

#panelHeading {
  position: relative;
  width: calc(100% - 10px);
  background-color: rgb(255, 255, 255);
  padding: 5px;
  box-shadow: 0px 5px 5px -5px rgba(0, 0, 0, 0.5);
  text-align: center;
}

#panelContent {
  padding: 5px;
}

#panelBackground {
  border-radius: 5px;
  background-color: white;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.5);
}

#actions {
  background-color: rgba(255, 255, 255, 0.5);
  position: relative;
  height: 40px;
  margin: 0;
  margin-top: 10px;
  border-radius: 0 0 5px 5px;
  box-shadow: 0 -4px 4px -3px rgba(0,0,0,0.5);
}

.fullWidth {
  width: 100%;
}

#panel {
  display: inline-block;
}

.noMargin {
  margin: 0 !important;
}

/* Customize the label (the container) */
.checkboxWrapper {
  display: inline-block;
  position: relative;
  cursor: pointer;
  font-size: 17px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  margin: 2px;
  height: 25px;
}

/* Hide the browser's default checkbox */
.checkboxWrapper input {
  transition: 0.1s all ease-out;
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom checkbox */
.checkmark {
  transition: 0.1s all ease-out;
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: white;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  border-bottom: 3px solid $aquaBlue;
  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.5);
}

.checkboxWrapper p {
  margin-top: 2px;
  margin-left: 30px;
}

/* On mouse-over, add a grey background color */
.checkboxWrapper:hover input ~ .checkmark {
  border-bottom: 3px solid rgb(108, 177, 214);
}

/* When the checkbox is checked, add a blue background */
.checkboxWrapper input:checked ~ .checkmark {
  border-bottom: 3px solid rgb(88, 157, 194);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkboxWrapper input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkboxWrapper .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid $aquaBlue;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

.hoverUnderline {
  position: relative;
  text-decoration: none;
}

.hoverUnderline:before {
  content: "";
  position: absolute;
  width: 100%;
  height: 2px;
  bottom: 0;
  left: 0;
  border-radius: 5px;
  background-color: $aquaBlue;
  visibility: hidden;
  opacity: 0.5;
  transform: scaleX(0);
  transition: all 0.25s cubic-bezier(1, 0.3, 0.4, 0.75) 0s;
}

.hoverUnderline:hover:before {
  visibility: visible;
  opacity: 1;
  transform: scaleX(1);
}
